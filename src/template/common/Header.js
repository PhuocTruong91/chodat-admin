import React from 'react';

import UserInfoSubMenu from './component/UserInfoSubMenu';
import logo from '../../image/logo.png';
import '../../css/header.scss'
import {userInfoStore} from '../../redux/user';
import { urlImg } from '../../controller/config';
import { renderImage } from '../../helper/imageHelper';

import {Link} from 'react-router-dom';

function Header(prop) {
    const [showMobileMenu, setShowMobileMenu] = React.useState(false);
    const [displaySubmenu, setdisplaySubmenu] = React.useState(false);
    const [isLogin, setIsLogin] = React.useState(false);
    const [user, setUser] = React.useState({});

    userInfoStore.subscribe (() =>{
        if(userInfoStore.getState().id.length > 0){
            setIsLogin(true);
            window.user = userInfoStore.getState();
            setUser(userInfoStore.getState());
        }
    })
  
    function showSubmenu(){
        setdisplaySubmenu(!displaySubmenu);
    }

    function handleShowMobileMenu(value){
        setShowMobileMenu(!showMobileMenu);
    }
    
    return ( 
        <div id="header" className="header">
            <p>{isLogin}</p>
            <div className='container-up'>
                <div className='left'>
                    <p>
                        <svg width="22" height="17" viewBox="0 0 22 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clip-path="url(#clip0_108_2726)">
                            <path d="M0.0373309 1.7879C0.0562721 1.59923 0.105728 1.41582 0.183361 1.24634C0.269002 1.26326 0.308529 1.34425 0.361232 1.40228C2.47372 3.70634 4.58585 6.01 6.69761 8.31325C6.84035 8.46798 6.82937 8.54293 6.69761 8.6892C4.58073 10.9908 2.46787 13.2953 0.359036 15.6026C0.308529 15.657 0.255827 15.709 0.202026 15.7646C0.0845436 15.5917 0.0922294 15.3777 0 15.2049V2.02846C0.0516045 1.95714 0 1.86406 0.0373309 1.7879Z" fill="#0C1B32"/>
                            <path d="M22 15.2049C21.9122 15.3778 21.9144 15.5906 21.798 15.7646C21.7541 15.7199 21.7123 15.68 21.6717 15.6365C19.5395 13.3083 17.4068 10.9808 15.2738 8.65421C15.1827 8.55509 15.1311 8.49827 15.2541 8.36409C17.412 6.01893 19.5654 3.67014 21.7145 1.31773C21.7398 1.29113 21.7672 1.26695 21.8068 1.22827C21.8898 1.40231 21.9416 1.59234 21.9594 1.78797C22 1.86412 21.9451 1.95721 21.9967 2.02974L22 15.2049Z" fill="#0C1B32"/>
                            <path d="M0.0373309 1.78784C0.0490051 1.82851 0.0517081 1.87165 0.0452161 1.9137C0.038724 1.95574 0.0232237 1.99548 0 2.02961L0 1.7963C0.0119004 1.79111 0.0245344 1.78824 0.0373309 1.78784Z" fill="#0C1B32"/>
                            <path d="M22 2.03205C21.9767 1.99792 21.9612 1.95818 21.9547 1.91614C21.9482 1.87409 21.951 1.83095 21.9626 1.79028C21.9754 1.79069 21.9881 1.79355 22 1.79875V2.03205Z" fill="#0C1B32"/>
                            <path d="M1.11768 0.216407C1.39052 0.0680342 1.69181 -0.0057736 1.99605 0.00123284H4.59165C9.70379 0.00123284 14.8167 0.00123284 19.9303 0.00123284C20.253 -0.0103616 20.5738 0.0599535 20.8679 0.206737C20.857 0.284103 20.7966 0.320368 20.7527 0.368722C17.9872 3.39487 15.2207 6.4198 12.4531 9.44353C11.858 10.0915 11.1663 10.3199 10.3549 10.0334C10.063 9.92211 9.79949 9.73561 9.58631 9.48946C6.79381 6.43511 4.00094 3.38157 1.20771 0.32883C1.18136 0.296191 1.15391 0.259926 1.11768 0.216407Z" fill="#0C1B32"/>
                            <path d="M20.8723 16.7909C20.5807 16.9411 20.2608 17.0128 19.9391 17C16.6247 17 13.3103 17 9.99586 17C7.34756 17 4.69889 17 2.04986 17C1.73409 17.01 1.42046 16.9401 1.13306 16.7958C1.15062 16.7039 1.22419 16.6604 1.27689 16.6023C3.38792 14.2942 5.49931 11.9866 7.61107 9.67928C7.73624 9.54147 7.80102 9.51366 7.94046 9.67202C8.274 10.0832 8.63436 10.467 9.01867 10.8204C10.3296 11.9386 12.093 11.8044 13.3139 10.5025C13.5862 10.2116 13.8541 9.91621 14.1176 9.61642C14.1912 9.53421 14.2351 9.51125 14.3219 9.60554C16.4922 11.9813 18.6643 14.3551 20.8383 16.7268C20.8521 16.7465 20.8635 16.768 20.8723 16.7909Z" fill="#0C1B32"/>
                            </g>
                            <defs>
                            <clipPath id="clip0_108_2726">
                            <rect width="22" height="17" fill="white"/>
                            </clipPath>
                            </defs>
                        </svg>
                        support@chodat.net.vn
                    </p>
                    <p>
                        <svg width="21" height="22" viewBox="0 0 21 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M0 5.7009C0.0781686 5.57517 0.0578448 5.42835 0.0938024 5.29325C0.190743 4.88618 0.394137 4.51213 0.683194 4.20932C1.24132 3.64549 1.79788 3.08244 2.36929 2.53032C2.83439 2.08051 3.37219 1.87824 4.01083 2.12814C4.25084 2.22914 4.46704 2.37916 4.64556 2.56859C5.44601 3.36461 6.24437 4.16247 7.04065 4.96214C7.41429 5.33855 7.67381 5.7665 7.59565 6.32877C7.53858 6.74266 7.30251 7.05581 7.01876 7.34007C6.56616 7.79535 6.1081 8.24673 5.65237 8.70045C5.37956 8.97144 5.378 9.01282 5.53121 9.35878C6.05807 10.5356 6.86555 11.5134 7.72931 12.4489C8.58712 13.3898 9.56229 14.2168 10.6309 14.9096C10.9991 15.1439 11.3962 15.329 11.7824 15.5344C11.9731 15.6343 12.106 15.55 12.235 15.4196C12.7165 14.9344 13.1993 14.4504 13.6834 13.9678C13.9687 13.6851 14.2838 13.4571 14.6996 13.4063C15.1045 13.3571 15.4524 13.4844 15.7682 13.7187C15.8764 13.8022 15.9788 13.893 16.0746 13.9905C16.8563 14.7667 17.6359 15.544 18.4134 16.3223C18.6729 16.5816 18.8902 16.869 18.9668 17.236C19.0149 17.4471 19.0111 17.6667 18.9557 17.876C18.9003 18.0853 18.795 18.2781 18.6487 18.4379C18.0491 19.1126 17.4105 19.7522 16.7476 20.3629C16.1332 20.9306 15.357 21.0485 14.5464 20.9876C13.1738 20.8877 11.9145 20.4168 10.6966 19.8162C8.78558 18.8782 7.03385 17.6463 5.50542 16.1654C3.37767 14.0928 1.65717 11.7375 0.594082 8.94176C0.329872 8.24673 0.112563 7.53609 0.0383026 6.7942C0.0383026 6.76609 0.0304858 6.7411 0 6.73017V5.7009Z" fill="#0C1B32"/>
                            <path d="M10.9616 0C11.3376 0.0827786 11.7159 0.156186 12.0895 0.249117C14.5589 0.86449 16.6233 2.15068 18.2813 4.06787C19.6777 5.67367 20.6145 7.62616 20.9929 9.71946C21.0187 9.85378 20.9695 9.86627 20.8702 9.88267C20.4325 9.95296 19.9932 10.0209 19.557 10.1052C19.4304 10.1294 19.396 10.1052 19.3725 9.97951C19.1535 8.79751 18.728 7.66322 18.1156 6.62854C17.3809 5.38197 16.393 4.30298 15.2155 3.46108C14.0439 2.61648 12.7057 2.03081 11.2899 1.74304C11.1246 1.70164 10.9566 1.67164 10.7872 1.65323C10.6254 1.64308 10.6215 1.5642 10.6403 1.44004C10.7067 1.00818 10.7685 0.575546 10.8302 0.14291C10.8373 0.0960544 10.8373 0.0476368 10.8396 0L10.9616 0Z" fill="#0C1B32"/>
                            <path d="M10.4238 5.66877C10.484 5.24472 10.5543 4.78553 10.6114 4.32557C10.6278 4.19125 10.6896 4.20687 10.7873 4.22248C12.1178 4.42982 13.3612 5.01324 14.3705 5.90383C15.5919 6.95599 16.4225 8.38888 16.7281 9.97091C16.757 10.1138 16.7187 10.1458 16.5968 10.1654C16.1653 10.2341 15.7369 10.3005 15.3046 10.384C15.1631 10.4121 15.1319 10.3676 15.1069 10.2442C14.887 9.15067 14.3436 8.14823 13.5469 7.36672C12.7503 6.5852 11.7372 6.06062 10.6387 5.86088C10.4167 5.82183 10.4167 5.82339 10.4238 5.66877Z" fill="#0C1B32"/>
                        </svg>
                        097 - 2664 - 535</p>
                </div>
                    {
                        isLogin === true ?
                        <div className="login">
                            <div className='group-account'>
                                {
                                    window.user.avatar !== null?  
                                        <img src={renderImage(window.user.avatar)} alt ="avatar" className='account-avatar'></img>
                                    :
                                    <svg width="22" height="23" viewBox="0 0 22 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M10.9997 2.3335C9.79589 2.3335 8.60389 2.5706 7.49174 3.03127C6.37959 3.49194 5.36907 4.16715 4.51786 5.01835C2.79878 6.73743 1.83301 9.06901 1.83301 11.5002C1.83301 13.9313 2.79878 16.2629 4.51786 17.982C5.36907 18.8332 6.37959 19.5084 7.49174 19.9691C8.60389 20.4297 9.79589 20.6668 10.9997 20.6668C13.4308 20.6668 15.7624 19.7011 17.4815 17.982C19.2006 16.2629 20.1663 13.9313 20.1663 11.5002C20.1663 10.2964 19.9292 9.10438 19.4686 7.99223C19.0079 6.88008 18.3327 5.86955 17.4815 5.01835C16.6303 4.16715 15.6198 3.49194 14.5076 3.03127C13.3955 2.5706 12.2035 2.3335 10.9997 2.3335ZM6.48051 17.2568C6.87467 16.4318 9.27634 15.6252 10.9997 15.6252C12.723 15.6252 15.1247 16.4318 15.5188 17.2568C14.2349 18.2799 12.6413 18.8358 10.9997 18.8335C9.29467 18.8335 7.72717 18.2468 6.48051 17.2568ZM16.8297 15.9277C15.5188 14.3327 12.338 13.7918 10.9997 13.7918C9.66134 13.7918 6.48051 14.3327 5.16967 15.9277C4.19451 14.6577 3.66603 13.1013 3.66634 11.5002C3.66634 7.45766 6.95717 4.16683 10.9997 4.16683C15.0422 4.16683 18.333 7.45766 18.333 11.5002C18.333 13.1685 17.7647 14.7085 16.8297 15.9277ZM10.9997 6.00016C9.22134 6.00016 7.79134 7.43016 7.79134 9.2085C7.79134 10.9868 9.22134 12.4168 10.9997 12.4168C12.778 12.4168 14.208 10.9868 14.208 9.2085C14.208 7.43016 12.778 6.00016 10.9997 6.00016ZM10.9997 10.5835C10.635 10.5835 10.2853 10.4386 10.0274 10.1808C9.76954 9.92291 9.62467 9.57317 9.62467 9.2085C9.62467 8.84382 9.76954 8.49409 10.0274 8.23622C10.2853 7.97836 10.635 7.8335 10.9997 7.8335C11.3643 7.8335 11.7141 7.97836 11.9719 8.23622C12.2298 8.49409 12.3747 8.84382 12.3747 9.2085C12.3747 9.57317 12.2298 9.92291 11.9719 10.1808C11.7141 10.4386 11.3643 10.5835 10.9997 10.5835Z" fill="#1F2125"/>
                                    </svg>
                                }
                                <p onClick={showSubmenu} className='account-name'> {(window.user.lastName ? window.user.lastName : '') + ' ' + (window.user.firstName ? window.user.firstName : '')} </p>
                                <svg onClick={showSubmenu} width="25" height="25" viewBox="0 0 25 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M6.03564 9.37633L12.0356 15.3763L18.0356 9.37633" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                                </svg>
                                <UserInfoSubMenu showSubmenu={showSubmenu} display={displaySubmenu}></UserInfoSubMenu>
                            </div>
                        </div>
                        :
                        <div className='right'>
                            <Link to="/signinsignup">
                                <p>Đăng nhập</p>
                            </Link>
                            <div className='line'></div>
                            <Link  onClick={() => { setShowMobileMenu(false)}} to="/signinsignup">
                                <p>Đăng ký</p>
                            </Link>
                        </div>
                        
                    }
            </div>
            <div className="container-down">
                <Link to='/'>
                    <img src={logo} alt="logo"/>
                </Link>
                <svg onClick={handleShowMobileMenu} className="d-mb" width="27" height="27" viewBox="0 0 27 27" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fillRule="evenodd" clipRule="evenodd" d="M3.375 13.9116C3.375 13.2296 3.92782 12.6768 4.60976 12.6768H22.3902C23.0722 12.6768 23.625 13.2296 23.625 13.9116C23.625 14.5935 23.0722 15.1463 22.3902 15.1463H4.60976C3.92782 15.1463 3.375 14.5935 3.375 13.9116Z" fill="white"/>
                        <path fillRule="evenodd" clipRule="evenodd" d="M3.375 7.98476C3.375 7.30282 3.92782 6.75 4.60976 6.75H22.3902C23.0722 6.75 23.625 7.30282 23.625 7.98476C23.625 8.66669 23.0722 9.21951 22.3902 9.21951H4.60976C3.92782 9.21951 3.375 8.66669 3.375 7.98476Z" fill="white"/>
                        <path fillRule="evenodd" clipRule="evenodd" d="M3.375 19.8384C3.375 19.1565 3.92782 18.6037 4.60976 18.6037H22.3902C23.0722 18.6037 23.625 19.1565 23.625 19.8384C23.625 20.5204 23.0722 21.0732 22.3902 21.0732H4.60976C3.92782 21.0732 3.375 20.5204 3.375 19.8384Z" fill="white"/>
                </svg>
                <div className={"menu-mobile " + (showMobileMenu ? 'active' : '')}>
                    <div className='container-mobile'>
                        <svg onClick={handleShowMobileMenu} width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M16.3032 5.80371L5.69662 16.4103" stroke="white" strokeWidth="1.6" strokeLinecap="round" strokeLinejoin="round"/>
                            <path d="M5.69678 5.80371L16.3034 16.4103" stroke="white" strokeWidth="1.6" strokeLinecap="round" strokeLinejoin="round"/>
                        </svg>
                        {
                            isLogin === true ?
                                <div className="menu-mobile-login">
                                    <div className='group-account'>
                                        <img src={renderImage(window.user.avatar)} alt="avatar" className="account-avatar"></img>
                                        <p className='account-name'> {(window.user.lastName ? window.user.lastName : '') + ' ' + (window.user.firstName ? window.user.firstName : '')} </p>
                                        {/* <div className='announcement'>
                                            <svg width="25" height="25" viewBox="0 0 25 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M18.3206 8.54834C18.3206 6.95704 17.6884 5.43092 16.5632 4.3057C15.438 3.18048 13.9119 2.54834 12.3206 2.54834C10.7293 2.54834 9.20313 3.18048 8.07792 4.3057C6.9527 5.43092 6.32056 6.95704 6.32056 8.54834C6.32056 15.5483 3.32056 17.5483 3.32056 17.5483H21.3206C21.3206 17.5483 18.3206 15.5483 18.3206 8.54834Z" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                                                <path d="M14.0506 21.5483C13.8748 21.8514 13.6224 22.103 13.3188 22.2779C13.0152 22.4527 12.671 22.5448 12.3206 22.5448C11.9702 22.5448 11.626 22.4527 11.3223 22.2779C11.0187 22.103 10.7664 21.8514 10.5906 21.5483" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                                            </svg>
                                            <label><span>2</span></label>
                                        </div> */}
                                    </div>
                                </div>
                            :
                            ''
                        }
                        {
                            isLogin === false ?
                                <div className='signin-signup-mobile'>
                                    <Link onClick={() => { setShowMobileMenu(false)}} to="/signinsignup">
                                        <p>Đăng nhập</p>
                                    </Link>
                                    <Link  onClick={() => { setShowMobileMenu(false)}} to="/signinsignup">
                                        <p>Đăng ký</p>
                                    </Link>
                                </div>
                            :
                            ''
                        }
                        {
                            window.user ? 
                            <>
                                <p className='basic-button light' onClick={() => {localStorage.removeItem('token'); window.location.reload()}}>Đăng xuất</p>
                            </>
                            : ''
                        }
                    </div>
                </div>
                <div onClick={handleShowMobileMenu} className={"background-blur " + (showMobileMenu ? 'active' : '')}>
                </div>
           </div>
        </div>
     );
}

export default Header;